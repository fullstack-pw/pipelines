name: Run Cypress Tests

on:
  workflow_call:
    inputs:
      env-vars:
        description: JSON string of additional environment variables
        required: false
        type: string
        default: "{}"

jobs:
  cypress-tests:
    runs-on: self-hosted
    container:
      image: cypress/included:latest
      options: --user node

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}

      - name: Configure environment variables
        id: set-env
        run: |
          # Create initial env file with base URL
          echo "CYPRESS_BASE_URL=${{ inputs.app-url }}" > cypress.env
          echo "CYPRESS_INSTALL_BINARY=0" >> cypress.env

          # Debug
          echo "Received environment variables:"
          echo '${{ inputs.env-vars }}'

          # Use Node.js to parse JSON and create environment variables
          node -e '
            const envVars = JSON.parse(`${{ inputs.env-vars }}`);
            const fs = require("fs");
            Object.entries(envVars).forEach(([key, value]) => {
              fs.appendFileSync("cypress.env", `CYPRESS_${key}=${value}\n`);
            });
          '

          # Debug
          echo "Final environment variables:"
          cat cypress.env

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_BASE_URL: ${{ inputs['app-url'] }}
          CYPRESS_INSTALL_BINARY: 0
        with:
          cache-key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}

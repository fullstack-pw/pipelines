# ci-templates.yml
stages:
  - test
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://dind:2375
  DOCKER_TLS_CERTDIR: ""

.test-app-template:
  stage: test
  image: alpine
  tags:
    - k8s-gitlab-runner
  script:
    - echo "Running tests for $APP_NAME..."
    - sleep 10

.build-docker-image-template:
  stage: build
  tags:
    - k8s-gitlab-runner
  image: docker:latest
  services:
    - name: docker:dind-rootless
      alias: dind

  script:
    - echo "Waiting for Docker Daemon to become available..."
    - for i in {1..10}; do
        if docker info > /dev/null 2>&1; then
          echo "Docker is up and running!";
          break;
        fi;
        echo "Waiting for Docker Daemon...";
        sleep 3;
      done;
    - if ! docker info > /dev/null 2>&1; then
        echo "Docker Daemon did not become ready in time.";
        exit 1;
      fi
    - echo "Building Docker image for $APP_NAME..."
    - docker build -t registry.fullstack.pw/$APP_NAME:latest $DOCKER_BUILD_PATH
    - docker push registry.fullstack.pw/$APP_NAME:latest


.deploy-app-template:
  stage: deploy
  image: alpine
  tags:
    - k8s-gitlab-runner
  script:
    - echo "Deploying $APP_NAME to $ENVIRONMENT..."
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > ~/.kube/config
    - |
      if [ -n "$CONTEXT" ]; then
        kubectl config use-context "$CONTEXT"
      fi
    - kubectl apply -k "$KUSTOMIZE_DIR"

  variables:
    KUBECONFIG_DIR: "/vault/secrets/github-runner"
  before_script:
    - export KUBECONFIG_CONTENT=$(cat $KUBECONFIG_DIR)
    - export KUBECONFIG=~/.kube/config

